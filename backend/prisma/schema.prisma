// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Alumn {
  id               String    @id @default(uuid())
  first_name       String
  last_name        String
  cpf              String   @unique
  regis_date       DateTime
  status           Int       @default(1)

  users            Users[]
  alumnAnswer      AlumnAnswer[]
  purchase         Purchase[]
}

model Staff {
  id              String    @id @default(uuid())
  first_name      String
  last_name       String
  cpf             String    @unique
  regis_date      DateTime
  status          Int       @default(1)

  users           Users[]
}

model Users {
  id          String  @id @default(uuid())
  email       String  @unique
  password    String
  id_alumn    String?
  id_staff    String?
  status      Int     @default(1)

  alumn       Alumn? @relation(fields: [id_alumn], references: [id])
  staff       Staff? @relation(fields: [id_staff], references: [id])
}

model Course {
  id            String  @id @default(uuid())
  name          String
  description   String
  rating        Float
  image         String
  price         Float
  status        Int     @default(1)

  module        Module[]
  purchase      Purchase[]
}

model Module {
  id            String  @id @default(uuid())
  name          String
  description   String
  order         Int
  id_course     String
  status        Int     @default(1)

  course        Course  @relation(fields: [id_course], references: [id])

  test          Test[]
}

model Test {
  id            String  @id @default(uuid())
  question      String
  answers       String
  right_answer  String
  id_module     String
  status        Int     @default(1)

  module        Module @relation(fields: [id_module], references: [id])

  alumnAnswer   AlumnAnswer[]
}

model AlumnAnswer {
  id            String @id @default(uuid())
  id_alumn      String
  id_test       String
  alumn_answer  String
  is_right      Boolean
  answer_date   DateTime

  alumn         Alumn @relation(fields: [id_alumn], references: [id])
  test          Test  @relation(fields: [id_test], references: [id])
}

model Purchase {
  id            String    @id @default(uuid())
  id_alumn      String
  id_course     String
  purchase_date DateTime
  status        Int       @default(1)

  alumn         Alumn     @relation(fields: [id_alumn], references: [id])
  course        Course    @relation(fields: [id_course], references: [id])
}